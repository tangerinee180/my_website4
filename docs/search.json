[
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "글목록",
    "section": "",
    "text": "HW3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhw4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhw5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhw6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/hw4/hw4.html",
    "href": "posts/hw4/hw4.html",
    "title": "hw4",
    "section": "",
    "text": "표본 분산 계산 시 왜 n-1로 나누는지 알아보도록 하겠습니다.\n균일분포 (3, 7)에서 20개의 표본을 뽑아서 분산을 2가지 방법으로 추정해보세요.\nn-1로 나눈 것을 s_2, n으로 나눈 것을 k_2로 정의하고, s_2의 분포와 k_2의 분포를 그려주세요! (10000개 사용) 각 분포 그래프에 모분산의 위치에 녹색 막대를 그려주세요. 결과를 살펴보고, 왜 n-1로 나눈 것을 분산을 추정하는 지표로 사용하는 것이 타당한지 써주세요!\n\nimport numpy as np\nfrom scipy.stats import uniform\nimport seaborn as sns\nimport matplotlib.pyplot as plt    \n\n#U~(3,7)\nx = uniform.rvs(loc=3, scale=4, size=200000).reshape(-1, 20)\nx_var = uniform.var(3,4)\nx_mean = x.mean(axis=1)\n\n\ns_2_list = []\nk_2_list = []\n\nfor i in range(10000):\n    row_variance = np.sum((x[i] - x_mean[i])**2)\n    s_2_list.append(row_variance/19)\n    k_2_list.append(row_variance/20)\n\n\nplt.hist(s_2_list, color = \"salmon\")\nplt.axvline(x_var, color=\"green\")\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\nmo_var = uniform.var(loc=3,scale=4)\nplt.hist(k_2_list, color = \"salmon\")\nplt.axvline(x_var, color=\"red\")\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\nnp.mean(s_2_list) \n\nnp.float64(1.3341919736891332)\n\n\n\nnp.mean(k_2_list)\n\nnp.float64(1.2674823750046764)\n\n\n\n그래프 상으론 큰 차이를 잘 모르겠지만 두 결과 값과\n\n\nx_var = uniform.var(3,4)\nx_var\n\nnp.float64(1.3333333333333333)\n\n\n원 함수의 분산 값을 비교해보니 s_2가 값이 더 비슷했다.\n따라서 n-1이 s_2 의 지표로 쓰이는 것이 타당하다."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n2"
  },
  {
    "objectID": "posts/hw3/hw3.html",
    "href": "posts/hw3/hw3.html",
    "title": "HW3",
    "section": "",
    "text": "from scipy.stats import norm\nfrom scipy.stats import binom\nfrom scipy.stats import bernoulli\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\n\ndef my_pdf(x,mu,sigma):\n    import math \n    return (1/(sigma*((2*math.pi)**0.5)))* math.exp( ( -0.5) *( ((x-mu)/sigma) **2))\n\nmy_pdf(0,0,1)\n\n\na_lin = np.linspace(-4,10,1000)\n\na_arr = np.array([])\nfor x in a_lin :\n    a_arr = np.append(a_arr,my_pdf(x,3,2))\n\n\nplt.plot(a_lin,a_arr)\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "posts/hw3/hw3.html#숙제-qmd-1.-정규-분포-pdf-값을-계산하는-자신만의-파이썬-함수를-정의하고-정규분포-mu-3-sigma-2-의-pdf를-그릴-것.",
    "href": "posts/hw3/hw3.html#숙제-qmd-1.-정규-분포-pdf-값을-계산하는-자신만의-파이썬-함수를-정의하고-정규분포-mu-3-sigma-2-의-pdf를-그릴-것.",
    "title": "HW3",
    "section": "",
    "text": "from scipy.stats import norm\nfrom scipy.stats import binom\nfrom scipy.stats import bernoulli\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\n\ndef my_pdf(x,mu,sigma):\n    import math \n    return (1/(sigma*((2*math.pi)**0.5)))* math.exp( ( -0.5) *( ((x-mu)/sigma) **2))\n\nmy_pdf(0,0,1)\n\n\na_lin = np.linspace(-4,10,1000)\n\na_arr = np.array([])\nfor x in a_lin :\n    a_arr = np.append(a_arr,my_pdf(x,3,2))\n\n\nplt.plot(a_lin,a_arr)\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "posts/hw3/hw3.html#파이썬-scipy-패키지-사용해서-다음과-같은-확률을-구하시오.",
    "href": "posts/hw3/hw3.html#파이썬-scipy-패키지-사용해서-다음과-같은-확률을-구하시오.",
    "title": "HW3",
    "section": "2. 파이썬 scipy 패키지 사용해서 다음과 같은 확률을 구하시오.",
    "text": "2. 파이썬 scipy 패키지 사용해서 다음과 같은 확률을 구하시오.\n\n#X ~ N(2, 3^2)\n\n \n# 2-1) P(X &lt; 3)\nnorm.cdf(3,loc = 2,scale = 3)\n\n# 2-2) P(2 &lt; X &lt; 5)\nnorm.cdf(5,loc = 2,scale = 3) - norm.cdf(2,loc = 2,scale = 3)\n\n#2-3) P(X &lt; 3 or X &gt; 7)\n1 - (norm.cdf(7,loc = 2,scale = 3) - norm.cdf(3,loc = 2,scale = 3))\n\nnp.float64(0.678349012091051)"
  },
  {
    "objectID": "posts/hw3/hw3.html#ls-빅데이터-스쿨-학생들의-중간고사-점수는-평균이-30이고-분산이-4인-정규분포를-따른다.-상위-5에-해당하는-학생의-점수는",
    "href": "posts/hw3/hw3.html#ls-빅데이터-스쿨-학생들의-중간고사-점수는-평균이-30이고-분산이-4인-정규분포를-따른다.-상위-5에-해당하는-학생의-점수는",
    "title": "HW3",
    "section": "3. LS 빅데이터 스쿨 학생들의 중간고사 점수는 평균이 30이고, 분산이 4인 정규분포를 따른다. 상위 5%에 해당하는 학생의 점수는?",
    "text": "3. LS 빅데이터 스쿨 학생들의 중간고사 점수는 평균이 30이고, 분산이 4인 정규분포를 따른다. 상위 5%에 해당하는 학생의 점수는?\n\nnorm.ppf(0.95,loc = 30,scale = 2)\n\nnp.float64(33.28970725390295)"
  },
  {
    "objectID": "posts/hw5/hw5.html",
    "href": "posts/hw5/hw5.html",
    "title": "hw5",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np\nimport seaborn as sns    \nimport matplotlib.pyplot as plt    \nimport math\nfrom scipy.stats import norm\n\nraw_welfare = pd.read_spss(\"../../Koweps_hpwc14_2019_beta2.sav\")\n\nwelfare = raw_welfare.copy()\n\n\nwelfare.describe()\n\nwelfare.rename(columns = {\n        \"h14_g3\"    : \"sex\",\n        \"h14_g4\"    : \"birth\",\n        \"h14_g10\"   : \"marriage_type\",\n        \"h14_g11\"   : \"religion\",\n        \"p1402_8aq1\": \"income\",\n        \"h14_eco9\"  : \"code_job\",\n        \"h14_reg7\"  : \"code_region\"},inplace = True)\n\nwelfare = welfare[[\"sex\",\"birth\",\"marriage_type\",\\\n\"religion\",\"income\",\"code_job\",\"code_region\"]]\n\nwelfare.shape\n\n(14418, 7)\nwelfare[\"sex\"].dtypes\nwelfare.loc[0,\"sex\"] = 2.0\nwelfare[\"sex\"].value_counts()\n\n\n\nwelfare[\"sex\"] = np.where(welfare[\"sex\"]==1,\"male\",\"female\")\nwelfare[\"sex\"].value_counts()\n\nwelfare[\"income\"].describe()\nwelfare[\"income\"].isna().sum()\nwelfare[\"income\"].sum()\nsex_income = welfare.dropna(subset=\"income\").groupby(\"sex\",as_index=False).agg(mean_income=(\"income\",\"mean\"))\n\nsex_income\n\nsns.barplot(data=sex_income,x=\"sex\",y=\"mean_income\",hue='sex')\n\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "posts/hw5/hw5.html#숙제-위-그래프에서-각-성별-95-신뢰-구간-계산-후-그리기",
    "href": "posts/hw5/hw5.html#숙제-위-그래프에서-각-성별-95-신뢰-구간-계산-후-그리기",
    "title": "hw5",
    "section": "#숙제: 위 그래프에서 각 성별 95% 신뢰 구간 계산 후 그리기",
    "text": "#숙제: 위 그래프에서 각 성별 95% 신뢰 구간 계산 후 그리기\n\ntemp = welfare.dropna(subset=\"income\").groupby(\"sex\",as_index=False).agg(mean_income=(\"income\",\"mean\"),\n                                                                              var_income =(\"income\",'var'),\n                                                                              len_income =(\"income\",\"count\"))\n\ntemp[\"left_ci\"]= temp['mean_income'] - norm.ppf(0.975,0,1)*np.sqrt(temp['var_income']/(temp[\"len_income\"]))\ntemp[\"right_ci\"]= temp['mean_income'] + norm.ppf(0.975,0,1)*np.sqrt(temp['var_income']/(temp[\"len_income\"]))\ntemp\n\n\n\n\n\n\n\n\nsex\nmean_income\nvar_income\nlen_income\nleft_ci\nright_ci\n\n\n\n\n0\nfemale\n186.293096\n17439.157372\n2245\n180.830455\n191.755737\n\n\n1\nmale\n349.037571\n47463.961875\n2289\n340.112592\n357.962550"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "MyWebSite4",
    "section": "",
    "text": "진짜 이번에도 터지면 진짜 퇴소함\n블로그에 코드 캡쳐해서\n올리기 전에 그냥 얌전히 돌아가줘,,,,,,\n\n1 + 1\n\n2"
  },
  {
    "objectID": "posts/hw1/hw1.html",
    "href": "posts/hw1/hw1.html",
    "title": "Homework1",
    "section": "",
    "text": "import pandas as pd\n\ndf = pd.DataFrame({\"제품\" : [\"사과\",\"딸기\",\"수박\"], \"판매량\" : [1800,1500,3000], \"가격\" : [24,38,13]} )\n\nmean_price = sum(df[\"판매량\"])/len(df) \nmean_sold = sum(df[\"가격\"])/len(df)\n\n\n\n\nimport pandas as pd\n\ndf = pd.read_csv(\"mpg.csv\")\ncmpg = df.copy()\ncmpg = cmpg.rename(columns = {\"cty\": \"city\",\"hwy\":\"highway\"})\ncmpg\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns\n\n\n\n\n\n\n\nimport pandas as pd\nimport matplotlib.pyplot as plt \nimport seaborn\nimport numpy as np    \n\nmidwest = pd.read_csv(\"midwest.csv\")\nmidwest.info\nmw = midwest.copy()\nmw = mw.rename(columns = {\"poptotal\":\"total\",\"popasian\":\"asian\"})\nmw[\"asian_percent\"] = mw[\"asian\"]/mw[\"total\"]*100\nmw[\"asian_percent\"].plot.hist()\nplt.show()\nplt.clf()\nmw[\"paseng\"] = np.where(mw[\"asian_percent\"]&gt;(sum(mw[\"asian_percent\"])/len(mw)),\"large\",\"small\")\nmw[\"paseng\"] = mw[\"asian_percent\"].apply(lambda x: \"large\" if x &gt; sum(mw[\"asian_percent\"])/len(mw) else \"small\")\nmw[\"paseng\"].value_counts().plot.bar()\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "posts/hw1/hw1.html#다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "href": "posts/hw1/hw1.html#다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "title": "Homework1",
    "section": "",
    "text": "import pandas as pd\n\ndf = pd.DataFrame({\"제품\" : [\"사과\",\"딸기\",\"수박\"], \"판매량\" : [1800,1500,3000], \"가격\" : [24,38,13]} )\n\nmean_price = sum(df[\"판매량\"])/len(df) \nmean_sold = sum(df[\"가격\"])/len(df)\n\n\n\n\nimport pandas as pd\n\ndf = pd.read_csv(\"mpg.csv\")\ncmpg = df.copy()\ncmpg = cmpg.rename(columns = {\"cty\": \"city\",\"hwy\":\"highway\"})\ncmpg\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns\n\n\n\n\n\n\n\nimport pandas as pd\nimport matplotlib.pyplot as plt \nimport seaborn\nimport numpy as np    \n\nmidwest = pd.read_csv(\"midwest.csv\")\nmidwest.info\nmw = midwest.copy()\nmw = mw.rename(columns = {\"poptotal\":\"total\",\"popasian\":\"asian\"})\nmw[\"asian_percent\"] = mw[\"asian\"]/mw[\"total\"]*100\nmw[\"asian_percent\"].plot.hist()\nplt.show()\nplt.clf()\nmw[\"paseng\"] = np.where(mw[\"asian_percent\"]&gt;(sum(mw[\"asian_percent\"])/len(mw)),\"large\",\"small\")\nmw[\"paseng\"] = mw[\"asian_percent\"].apply(lambda x: \"large\" if x &gt; sum(mw[\"asian_percent\"])/len(mw) else \"small\")\nmw[\"paseng\"].value_counts().plot.bar()\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "posts/hw2/hw2.html",
    "href": "posts/hw2/hw2.html",
    "title": "Homework2",
    "section": "",
    "text": "p144\n\nimport pandas as pd\nimport matplotlib.pyplot as plt \nimport seaborn\nimport numpy as np    \n\nmpg_raw = pd.read_csv(\"mpg.csv\")\nmpg = mpg_raw.copy()\n\n\na4 = sum(mpg.query('displ &lt;= 4')[\"hwy\"])/len(mpg.query('displ &lt;= 4')[\"hwy\"])\na4 = mpg.query('displ &lt;= 4')[\"hwy\"].mean()\nb5 = sum(mpg.query('displ &gt;= 5')[\"hwy\"])/len(mpg.query('displ &gt;= 5')[\"hwy\"])\nif a4 &gt; b5 :\n    print(\"배기량 4 이하 자동차가 고속도로 연비 평균이 높습니다.\")\nelse :\n    print(\"배기량 5 이상 자동차가 고속도로 연비 평균이 높습니다.\")\n\nmpg.info\naudi_cty_mean = mpg.query('manufacturer == \"audi\"')[\"cty\"].mean()\ntoyota_cty_mean = mpg.query('manufacturer == \"toyota\"')[\"cty\"].mean()\nif audi_cty_mean &gt; toyota_cty_mean :\n    print(\"audi의 도시 연비 평균이 높습니다.\")\nelse :\n    print(\"toyota의 도시 연비 평균이 높습니다.\")\n\nprint(mpg.query('manufacturer in [\"chevorlet\",\"ford\",\"honda\"]')['hwy'].mean())\n\n배기량 4 이하 자동차가 고속도로 연비 평균이 높습니다.\ntoyota의 도시 연비 평균이 높습니다.\n22.852941176470587\n\n\n\n\np153\n\nimport pandas as pd\nimport numpy as np    \n\nmpg_raw = pd.read_csv(\"mpg.csv\")\nmpg = mpg_raw.copy()\nmpg[[\"category\",\"cty\"]]\nsuv_cty_mean = mpg.query(\"category == 'suv'\")['cty'].mean()\ncom_cty_mean = mpg.query(\"category == 'compact'\")['cty'].mean()\n\nif suv_cty_mean &gt; com_cty_mean :\n    print(\"suv의 도시 연비 평균이 높습니다.\")\nelse :\n    print(\"compact의 도시 연비 평균이 높습니다.\")\n\ncompact의 도시 연비 평균이 높습니다.\n\n\n\n\np158\n\nmpg_raw = pd.read_csv(\"mpg.csv\")\nmpg = mpg_raw.copy()\nmpg.assign(sum_ty = lambda x : x['cty'] + x[\"hwy\"],\nave_ty = lambda x : x['sum_ty']/2).sort_values(\"ave_ty\",ascending=False).head(3)\nmpg = mpg.assign(sum_ty = lambda x : x['cty'] + x[\"hwy\"],\nave_ty = lambda x : x['sum_ty']/2)\n\nmpg.sort_values(\"ave_ty\").head(3)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\nsum_ty\nave_ty\n\n\n\n\n54\ndodge\ndakota pickup 4wd\n4.7\n2008\n8\nauto(l5)\n4\n9\n12\ne\npickup\n21\n10.5\n\n\n59\ndodge\ndurango 4wd\n4.7\n2008\n8\nauto(l5)\n4\n9\n12\ne\nsuv\n21\n10.5\n\n\n69\ndodge\nram 1500 pickup 4wd\n4.7\n2008\n8\nmanual(m6)\n4\n9\n12\ne\npickup\n21\n10.5"
  },
  {
    "objectID": "posts/hw6/hw6.html",
    "href": "posts/hw6/hw6.html",
    "title": "hw6",
    "section": "",
    "text": "신형 자동차의 에너지 소비효율 등급\n슬통 자동자는 매해 출시되는 신형 자동차의 에너지 소비효율 등급을 1등급으로 유지하고 있다. 22 년 개발된 신형 모델이 한국 자동차 평가원에서 설정한 에너지 소비 효율등급 1등급을 받을 수 있을지 검정하려한다. 평가원에 따르면 1등급의 기준은 평균 복합 에너지 소비효율이 16.0 이상인 경우 부여 한다고 한다. 다음은 신형 자동차 15대의 복합 에너지소비효율 측정한 결과이다.\n15.078, 15.752, 15.549, 15.56, 16.098, 13.277, 15.462, 16.116, 15.214, 16.93, 14.118, 14.927, 15.382, 16.709, 16.804\n표본에 의하여 판단해볼때, 현대자동차의 신형 모델은 에너지 효율 1등급으로 판단할 수 있을지 판단해보시오. (유의수준 1%로 설정)\n\n1. 검정을 위한 가설을 명확하게 서술하시오.\n\nimport numpy as np\nimport matplotlib.pyplot as plt    \nfrom scipy.stats import t\nfrom scipy.stats import norm\n#1.\nprint(\"H0 : mu &gt;= 16 , Ha: mu1 &lt; 16\")\n\nH0 : mu &gt;= 16 , Ha: mu1 &lt; 16\n\n\n\n\n2. 검정통계량 계산하시오.\n\na = np.array([15.078, 15.752, 15.549, 15.56, 16.098, 13.277, 15.462, 16.116, 15.214, 16.93, 14.118, 14.927, 15.382, 16.709, 16.804])\na_mean = a.mean()\na_std = np.std(a,ddof=1)\nn = len(a)\na_sn = np.std(a, ddof=1) / np.sqrt(n)\n#2. \nt_value = (a_mean - 16)/a_sn\nt_value\n\nnp.float64(-1.8500447456376756)\n\n\n\n\n3. p‑value을 구하세요.\n\n#p_value\np_value = t.cdf(t_value, df=n-1)\np_value\n\nnp.float64(0.042762417664207845)\n\n\n\n\n4. 현대자동차의 신형 모델의 평균 복합 에너지 소비효율에 대하여 95% 신뢰구간을 구해보세요.\n\nci = t.interval(0.95, loc=a_mean, scale=a_sn, df=n-1)\nci\n\n(np.float64(14.988864240339733), np.float64(16.074602426326933))\n\n\n\nprint(round(a_mean - t.ppf(0.975, n-1) * a_sn, 3),round(a_mean + t.ppf(0.975, n-1) * a_sn, 3))\n\n14.989 16.075"
  }
]